{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","js/info_module.js","js/index_info.js"],"names":["cityName","localStorage","getItem","URL_DAY_WEATHER","cityWeatherInfo","cityWeatherInfoDaily","cityPicture","dateNow","Date","btnChangCity","document","getElementById","btnCompareCities","cityImageContainer","getWeatherDataPerDay","fetch","res","json","paintWeatherGeneralInfo","getWeatherDataDaily","getCityPicture","URL_DAILY_WEATHER","coord","lat","lon","resDaily","paintWeatherDailyInfo","console","log","showCityPicture","nameCity","name","date","toDateString","icon","weather","temp","Math","floor","main","tempMin","temp_min","tempMax","temp_max","feelsLike","feels_like","image","createElement","temperature","descResume","innerText","innerHTML","src","appendChild","textContent","description","dailyArray","daily","detailTable","nameDays","forEach","element","index","day","setDate","getDate","getDay","min","max","setLocalStorage","StorageValue","setItem","imageCityCard","urlImage","urls","regular","changeCity","window","open","compareCities","getWeather","addEventListener"],"mappings":";AAAA;AACA,AEEA;AFDA;AACA,AECA;AFAA;AACA;AACA;AACA,AEPA;AFQA,AEPA;AFQA,AEPA;AFQA,AEJA,ADNA,CCMC,YAAM;AFKP,AEHI,ADPJ;ADWA,AEFC,ADRD,CCIA;AFOA,ACTA,IAAIA,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAf;ADUA,ACTA,IAAMC,eAAe,+DAAwDH,QAAxD,4CAArB;ADUA,ACTA,IAAII,eAAJ;ADUA,ACTA,IAAIC,oBAAJ;ADUA,ACTA,IAAIC,WAAJ;ADUA,ACTA,IAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;ADUA,ACRA,IAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAArB;ADSA,ACRA,IAAMC,gBAAgB,GAAGF,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAzB;ADSA,ACRA,IAAME,kBAAkB,GAAGH,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAA3B,EAEA;ADOA,ACNA;ADOA,ACNA;ADOA,ACLA;ADMA;AACA,ACNA,IAAMG,oBAAoB;ADO1B,ACP0B,qEAAG;ADQ7B,ACR6B;ADS7B,ACT6B;ADU7B,ACV6B;ADW7B,ACX6B;ADY7B,ACZ6B;ADa7B,ACb6B;ADc7B,ACd6B,mBACPC,KAAK,CAACZ,eAAD,CADE;ADe7B;AACA,AChB6B;ADiB7B,AChBUa,YAAAA,GADmB;ADkB7B,AClB6B;ADmB7B,ACnB6B,mBAEDA,GAAG,CAACC,IAAJ,EAFC;ADoB7B;AACA,ACrB6B;ADsB7B,ACpBIb,YAAAA,eAFyB;ADuB7B,ACpBIc,YAAAA,uBAAuB,GAHE,CAKzB;ADmBJ;AACA,ACnBIC,YAAAA,mBAAmB,GANM,CAQzB;ADkBJ;AACA,AClBIC,YAAAA,cAAc;ADmBlB;AACA,AC7B6B;AD8B7B,AC9B6B;AD+B7B,AC/B6B;ADgC7B,AChC6B;ADiC7B,ACjC6B;ADkC7B,AClC6B;ADmC7B,ACnC6B,GAAH;ADoC1B;AACA,ACrC0B,kBAApBN,oBAAoB;ADsC1B,ACtC0B;ADuC1B,ACvC0B;ADwC1B,ACxC0B,GAA1B,EAaA;AD4BA;AACA;AACA,AC7BA,IAAMK,mBAAmB;AD8BzB,AC9ByB,sEAAG;AD+B5B,AC/B4B;ADgC5B,AChC4B;ADiC5B,ACjC4B;ADkC5B,AClC4B;ADmC5B,ACnC4B;ADoC5B,ACnCUE,YAAAA,iBADkB,iEACyDjB,eAAe,CAACkB,KAAhB,CAAsBC,GAD/E,kBAC0FnB,eAAe,CAACkB,KAAhB,CAAsBE,GADhH;ADqC5B,ACrC4B;ADsC5B,ACtC4B,mBAGDT,KAAK,CAACM,iBAAD,CAHJ;ADuC5B;AACA,ACxC4B;ADyC5B,ACtCUI,YAAAA,QAHkB;AD0C5B,AC1C4B;AD2C5B,AC3C4B,mBAIKA,QAAQ,CAACR,IAAT,EAJL;AD4C5B;AACA,AC7C4B;AD8C5B,AC1CIZ,YAAAA,oBAJwB;AD+C5B,AC1CIqB,YAAAA,qBAAqB;AD2CzB,AC1CIC,YAAAA,OAAO,CAACC,GAAR,CAAYvB,oBAAZ;AD2CJ;AACA,AClD4B;ADmD5B,ACnD4B;ADoD5B,ACpD4B;ADqD5B,ACrD4B;ADsD5B,ACtD4B;ADuD5B,ACvD4B;ADwD5B,ACxD4B,GAAH;ADyDzB;AACA,AC1DyB,kBAAnBc,mBAAmB;AD2DzB,AC3DyB;AD4DzB,AC5DyB;AD6DzB,AC7DyB,GAAzB;AD8DA;AACA,ACtDA,IAAMC,cAAc;ADuDpB,ACvDoB,sEAAG;ADwDvB,ACxDuB;ADyDvB,ACzDuB;AD0DvB,AC1DuB;AD2DvB,AC3DuB;AD4DvB,AC5DuB;AD6DvB,AC7DuB;AD8DvB,AC9DuB,mBACDL,KAAK,iHAA0Gf,QAA1G,eADJ;AD+DvB;AACA,AChEuB;ADiEvB,AChEUgB,YAAAA,GADa;ADkEvB,AClEuB;ADmEvB,ACnEuB,mBAECA,GAAG,CAACC,IAAJ,EAFD;ADoEvB;AACA,ACrEuB;ADsEvB,ACpEIX,YAAAA,WAFmB;ADuEvB,ACpEIuB,YAAAA,eAAe;ADqEnB;AACA,ACzEuB;AD0EvB,AC1EuB;AD2EvB,AC3EuB;AD4EvB,AC5EuB;AD6EvB,AC7EuB;AD8EvB,AC9EuB;AD+EvB,AC/EuB,GAAH;ADgFpB;AACA,ACjFoB,kBAAdT,cAAc;ADkFpB,AClFoB;ADmFpB,ACnFoB;ADoFpB,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":"index_info.66814b4d.js","sourceRoot":"..\\modern-javascript-app","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","//  -------------------------------------------------------\r\n//  Variables - Global use\r\n//  -------------------------------------------------------\r\n\r\nvar cityName = localStorage.getItem(\"name_localCity\");\r\nconst URL_DAY_WEATHER = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=e4dfa41e22f93aa72d2e80838a3bb930`\r\nvar cityWeatherInfo;\r\nvar cityWeatherInfoDaily;\r\nvar cityPicture;\r\nvar dateNow = new Date();\r\n\r\nconst btnChangCity = document.getElementById(\"btnChangeCity\")\r\nconst btnCompareCities = document.getElementById(\"btnCompareCities\")\r\nconst cityImageContainer = document.getElementById(\"cityImage\");\r\n\r\n//  -------------------------------------------------------\r\n//  Functions\r\n//  -------------------------------------------------------\r\n\r\n//getWeatherDataPerDay - Function : Get data info of one day\r\nconst getWeatherDataPerDay = async () => {\r\n    const res = await fetch(URL_DAY_WEATHER);\r\n    cityWeatherInfo = await res.json();\r\n    paintWeatherGeneralInfo();\r\n\r\n    //Getting Weather Daily\r\n    getWeatherDataDaily();\r\n\r\n    //Getting pictyre\r\n    getCityPicture()\r\n\r\n}\r\n\r\n// getWeatherDataDaily - function : Get from the API the daily weather\r\nconst getWeatherDataDaily = async () => {\r\n    const URL_DAILY_WEATHER = `https://api.openweathermap.org/data/2.5/onecall?lat=${cityWeatherInfo.coord.lat}&lon=${cityWeatherInfo.coord.lon}&units=metric&exclude=hourly,minutely&appid=e4dfa41e22f93aa72d2e80838a3bb930`;\r\n\r\n    const resDaily = await fetch(URL_DAILY_WEATHER);\r\n    cityWeatherInfoDaily = await resDaily.json();\r\n    paintWeatherDailyInfo();\r\n    console.log(cityWeatherInfoDaily)\r\n}\r\n\r\nconst getCityPicture = async () => {\r\n    const res = await fetch(`https://api.unsplash.com/photos/random?client_id=KnqxdhP9gviZnH7O9L4xG4KVbrGZHHeooFPfFMTDctg&query=%27${cityName}%27%20SKY`);\r\n    cityPicture = await res.json();\r\n    showCityPicture();\r\n}\r\n\r\n// paintWeatherGeneralInfo - function : paint in the html page the weather of the day\r\nconst paintWeatherGeneralInfo = () => {\r\n    //console.log(cityWeatherInfo.base);\r\n    let nameCity = cityWeatherInfo.name\r\n    let date = dateNow.toDateString();\r\n    let icon = cityWeatherInfo.weather[0].icon;\r\n    let temp = Math.floor(cityWeatherInfo.main.temp - 273.15)\r\n    let tempMin = Math.floor(cityWeatherInfo.main.temp_min - 273.15)\r\n    let tempMax = Math.floor(cityWeatherInfo.main.temp_max - 273.15)\r\n    let feelsLike = Math.floor(cityWeatherInfo.main.feels_like - 273.15)\r\n\r\n    //New Elements\r\n    let image = document.createElement(\"img\");\r\n    let temperature = document.createElement(\"h2\");\r\n    let descResume = document.createElement(\"small\");\r\n\r\n    document.getElementById(\"cityName\").innerText = nameCity;\r\n    document.getElementById(\"date\").innerHTML = `${date}<br>${cityWeatherInfo.weather[0].main}`;\r\n\r\n    image.src = `https://openweathermap.org/img/wn/${icon}@2x.png`\r\n    document.getElementById(\"picture\").appendChild(image);\r\n\r\n    temperature.textContent = `${temp}°C`\r\n    document.getElementById(\"temp\").appendChild(temperature);\r\n\r\n    descResume.innerHTML = `${tempMax}°/${tempMin}°  Feels like ${feelsLike}° <br> ${cityWeatherInfo.weather[0].description}`\r\n    document.getElementById(\"descInfo\").appendChild(descResume);\r\n}\r\n\r\n// paintWeatherDailyInfo - function : paint in the html page the daily weather (5 days)\r\nconst paintWeatherDailyInfo = () => {\r\n\r\n    let dailyArray = cityWeatherInfoDaily.daily;\r\n    let detailTable = document.getElementById(\"detailTable\")\r\n    let nameDays = [\"Mon\", \"Sun\", \"Tue\", \"Wen\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n    dailyArray.forEach((element, index) => {\r\n        let day = new Date(dateNow);\r\n        day.setDate(day.getDate() + index);\r\n\r\n        // let iconImg = `https://openweathermap.org/img/wn/${element.weather[0].icon}@2x.png}`\r\n        // <img src=\"http://openweathermap.org/img/wn/02d@2x.png\" class=\"max-width: 50%;\" >\r\n        // <img src=\"http://openweathermap.org/img/wn/${iconImg}@2x.png\">\r\n        if (index >= 1) {\r\n            detailTable.innerHTML += `<tr class=\"table-info\">                               \r\n            <td>${nameDays[day.getDay()]}</td>\r\n            <td>${element.temp.min}°c</td>\r\n            <td>${element.temp.max}°c</td>\r\n          </tr> `\r\n        }\r\n\r\n    });\r\n}\r\n// setLocalStorage - function : Set the Values of Local Storage\r\nconst setLocalStorage = (StorageValue) => {\r\n    if (StorageValue == \"\") {\r\n        localStorage.setItem(\"id_localCity\", StorageValue);\r\n        localStorage.setItem(\"name_localCity\", StorageValue);\r\n        localStorage.setItem(\"lat_localCity\", StorageValue);\r\n        localStorage.setItem(\"lon_localCity\", StorageValue);\r\n    }\r\n}\r\n\r\n// showCitiPicture - function : shows picture of city\r\nconst showCityPicture = () => {\r\n\r\n    let imageCityCard = document.createElement(\"div\");\r\n    let urlImage = cityPicture.urls.regular;\r\n    console.log(urlImage);\r\n\r\n    imageCityCard.innerHTML = `\r\n        <div class=\"card border-dark  bg-light mb-3\" style=\"max-width: 20rem;\">\r\n      \r\n      <div class=\"card-body\">\r\n        <h4 class=\"card-title\">${cityName}</h4>\r\n        <img style=\"height: 200px; width: 100%; display: block;\" src=\"${urlImage}\" alt=\"Card image\">\r\n        \r\n      </div>\r\n    </div>`\r\n    cityImageContainer.appendChild(imageCityCard);\r\n}\r\n\r\n\r\n// changeCity - function : Change the city origen\r\nconst changeCity = () => {\r\n    setLocalStorage(\"\");\r\n    window.open(\"index.html\", \"_self\")\r\n}\r\n\r\n// compareCities - function : compare 2 citie's weather\r\nconst compareCities = () => {\r\n\r\n}\r\n\r\n// getWeather --MAIN-- function : Get the weather per day and daily\r\nconst getWeather = () => {\r\n    getWeatherDataPerDay();\r\n}\r\n\r\n//  -------------------------------------------------------\r\n//  Events.\r\n//  -------------------------------------------------------\r\n\r\nbtnChangCity.addEventListener('click', changeCity);\r\nbtnCompareCities.addEventListener('click', compareCities);\r\n\r\n//  -------------------------------------------------------\r\n//  Execution Secuence.\r\n//  -------------------------------------------------------\r\n\r\nexport default getWeather;\r\n// getWeather();\r\n","//  -------------------------------------------------------\r\n//  Indexfile, imports the funcionality from the mail_module.js file\r\n//  -------------------------------------------------------\r\nimport 'regenerator-runtime/runtime'\r\nimport getWeather from './info_module.js'\r\n\r\n(() => {\r\n\r\n    getWeather();\r\n\r\n})();"]}